<?php/** * Hybrid Core Wrapper Functions * * @package    Shell * @subpackage Functions * @since      0.2.0 * @author     David Chandra Purnama <david@shellcreeper.com> * @copyright  Copyright (c) 2013, David Chandra Purnama * @link       http://themehybrid.com/themes/shell * @license    http://www.gnu.org/licenses/old-licenses/gpl-2.0.html *//** * shell_document_title() * Output current page title, this just a replacement for "wp_title()" function. *  * Output: * {sepatator} default is ": " * - front page (first page): "{site title}{separator} {site Description}" * - singular pages: "{post type title}" * - taxonomy archive pages: "{taxonomy title}" * - author archive pages: "{author name}" * - post type archive pages: "{post type archive title}" * - time based archive pages: "Archive for {time}" time: day, month, etc. * -- minute archive pages: "Archive for minute {minute}" * -- weekly archive pages: "Archive for week {week} of {year}" * - search result pages: 'Search results for "{seach term}"' * - 404 pages: "404 Not Found" * - paged page: "{current title}{separator} Page {page number}" *  * >> filter: "shell_document_title" (atomic) *            this filter should not be used. use "wp_title" filter instead. *            it's possible that this filter might changed in the future. * >> filter: "wp_title" *            use this filter to modify output * * @return string current page title. * @uses hybrid_document_title()  path: library/functions/context.php * @link http://codex.wordpress.org/Function_Reference/wp_title * @link http://codex.wordpress.org/Plugin_API/Filter_Reference/wp_title */function shell_document_title(){	hybrid_document_title();}/** * shell_body_attributes() * Outputs the attributes for the <body> element.  By default, this is just the 'class' attribute, but  * developers can filter this to add other attributes. *  * >> filter: "shell_body_attributes" (atomic) *            it's possible that this filter might changed in the future. *            do not use this filter to modify body class. use "body_class" instead * >> filter: "body_class" *            {@link http://codex.wordpress.org/Plugin_API/Filter_Reference/body_class} *  * @param none * @link http://themehybrid.com/docs/functions/hybrid_body_attributes * @since 0.2.0 */function shell_body_attributes(){	hybrid_body_attributes();}/** * shell_site_title() * Output the html of site title using dynamic heading tag. * Site title is defined on the General Settings page in the admin panel. * * Tag: * - on front page: "h1" * - other pages: "div" *  * To style this via css use the id of elements instead using the element tag: * - right: #site-title{} * - right: #site-title a{} * - wrong: #brading h1{} * - wrong: #brading h1 a{} *  * Example output: * <{tag} id="site-title"> *   <a rel="home" title="{site title}" href="{site url}"> *       <span>{site title}</span> *   </a> * </{tag}> * * >> filter: "shell_site_title" (atomic) *  * @uses hybrid_site_title path: library/functions/utillity.php * @since 0.2.0 */function shell_site_title(){	hybrid_site_title();}/** * shell_site_description() * Output the html of site description using dynamic tag. * Site description/tag line is defined on the General Settings page in the admin panel. * * Tag: * - on front page: "h2" * - other pages: "div" *  * To style this via css use the id of elements instead using the element tag: * - right: #site-description{} * - wrong: #brading h2, #branding div{} *  * Example output: * <{tag} id="site-description"> *    <span>{site-description}</span> * </{tag}> * * >> filter: "shell_site_description" (atomic) * * @uses hybrid_site_description() path library/functions/utillity.php * @since 0.2.0 */function shell_site_description(){	hybrid_site_description();}/** * shell_post_class() * Output entry classs, only used in loop-error.php and 404.php *  * >> filter: "shell_post_class" atomic *             do not use this filter, use "post_class" instead * >> filter: "post_class" *            {@link http://codex.wordpress.org/Function_Reference/post_class} *  * @param  string|array $class    Additional classes for more control. * @param  int          $post_id  ID of a specific post to get the class for. * @uses hybrid_entry_class() path library/functions/context.php * @since 0.2.0 */function shell_post_class( $class = '', $post_id = null ){	hybrid_post_class( $class , $post_id );}/** * shell_post_attributes() * Outputs the attributes for the main content <article> element.  * By default, this is just the 'class' attribute, but  * developers can filter this to add other attributes. *  * >> filter: "shell_post_attributes" (atomic) *            it's possible that this filter might changed in the future. *            do not use this filter to modify body class. use "body_class" instead * >> filter: "body_class" *            {@link http://codex.wordpress.org/Plugin_API/Filter_Reference/body_class} *  * @param none * @uses hybrid_post_attributes() path library/functions/context.php * @link http://themehybrid.com/docs/functions/hybrid_body_attributes * @since 0.2.0 */function shell_post_attributes(){	hybrid_post_attributes();}/** * shell_attachment() * Loads the correct function for handling attachments.  Checks the attachment mime type to call  * correct function. Image attachments are not loaded with this function. *  * >> filter: "shell_{$type}_attachment" (atomic) * >> filter: "shell_attachment" (atomic) *  * @uses hybrid_attachment() path library/functions/media.php * @since 0.2.0 */function shell_attachment(){	hybrid_attachment();}/** * shell_comment_attributes() * Outputs the attributes for the comment wrapper.  By default, this is the 'class' and 'id' attributes,  * but developers can filter this to add other attributes. *  * >> filter: "shell_comment_attributes" (atomic) *  * @param none * @uses hybrid_comment_attributes path library/functions/context.php * @since 0.2.0 */function shell_comment_attributes(){	hybrid_comment_attributes();}/** * shell_avatar() * Displays the avatar for the comment author and wraps it in the comment author's URL if it is * available. *  * >> filter: "shell_avatar" (atomic) *  * @param none * @uses hybrid_avatar() path library/functions/comments.php * @since 0.2.0 */function shell_avatar(){	hybrid_avatar();}/** * shell_list_comments_args() * Arguments for the wp_list_comments_function() used in comments.php. *  * >> filter: "shell_list_comments_args" atomic *  * @param none; * @uses hybrid_list_comments_args() path library/functions/comments.php * @since 0.2.0 */function shell_list_comments_args(){	hybrid_list_comments_args();}